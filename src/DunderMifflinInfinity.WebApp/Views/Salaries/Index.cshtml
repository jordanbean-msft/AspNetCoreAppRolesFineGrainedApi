@model IEnumerable<DunderMifflinInfinity.WebApp.Models.Salary>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if((await AuthorizationService.AuthorizeAsync(User, Policies.SALARY)).Succeeded)
{
<p>
    <a asp-action="Create">Create New</a>
</p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Employee.Branch)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employee)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
      @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.Branch.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FirstName) @Html.DisplayFor(modelItem => item.Employee.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
              @if((await AuthorizationService.AuthorizeAsync(User, item, Policies.SALARY)).Succeeded)
              {
                <a asp-action="Edit" asp-route-id="@item.SalaryID">Edit</a>
              }
                | <a asp-action="Details" asp-route-id="@item.SalaryID">Details</a> |
              @if((await AuthorizationService.AuthorizeAsync(User, item, Policies.SALARY)).Succeeded)
              {
                <a asp-action="Delete" asp-route-id="@item.SalaryID">Delete</a>
              }
            </td>
        </tr>
      }
    </tbody>
</table>
